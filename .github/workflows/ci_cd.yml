name: Django CI - Build and Test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-test:
    name: Build, Lint and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create .env file for CI
        run: |
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" > .env
          echo "SENTRY_DSN=${{ secrets.SENTRY_DSN }}" >> .env
          echo "DJANGO_SETTINGS_MODULE=oc_lettings_site.settings" >> .env

      - name: Collect Static Files
        run: |
          python manage.py collectstatic --noinput

      - name: Lint with Flake8
        run: |
          flake8 . --count --show-source --statistics

      - name: Run tests with Pytest and Coverage
        run: |
          pytest --cov=. --cov-fail-under=80 --ignore=env

  deploy:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build-and-test # S'assure que le build et les tests passent avant de déployer
    if: github.ref == 'refs/heads/master' # Déploie uniquement sur push sur la branche master

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/oc-lettings:latest
                ${{ secrets.DOCKERHUB_USERNAME }}/oc-lettings:${{ github.sha }}
